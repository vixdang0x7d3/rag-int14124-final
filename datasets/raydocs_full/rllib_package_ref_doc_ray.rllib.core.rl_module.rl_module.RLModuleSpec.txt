

ray.rllib.core.rl_module.rl_module.RLModuleSpec#


class ray.rllib.core.rl_module.rl_module.RLModuleSpec(module_class: Type[RLModule] | None = None, observation_space: gymnasium.Space | None = None, action_space: gymnasium.Space | None = None, inference_only: bool = False, learner_only: bool = False, model_config: Dict[str, Any] | DefaultModelConfig | None = None, catalog_class: Type[Catalog] | None = None, load_state_path: str | None = None, model_config_dict: dict | int | None = None)[source]#
Utility spec class to make constructing RLModules (in single-agent case) easier.

Parameters:

module_class – The RLModule class to use.
observation_space – The observation space of the RLModule. This may differ
from the observation space of the environment. For example, a discrete
observation space of an environment, would usually correspond to a
one-hot encoded observation space of the RLModule because of preprocessing.
action_space – The action space of the RLModule.
inference_only – Whether the RLModule should be configured in its inference-only
state, in which those components not needed for action computing (for
example a value function or a target network) might be missing.
Note that inference_only=True AND learner_only=True is not allowed.
learner_only – Whether this RLModule should only be built on Learner workers, but
NOT on EnvRunners. Useful for RLModules inside a MultiRLModule that are only
used for training, for example a shared value function in a multi-agent
setup or a world model in a curiosity-learning setup.
Note that inference_only=True AND learner_only=True is not allowed.
model_config – The model config dict or default RLlib dataclass to use.
catalog_class – The Catalog class to use.
load_state_path – The path to the module state to load from. NOTE: This must be
an absolute path.



PublicAPI (beta): This API is in beta and may change before becoming stable.
Methods


as_multi_rl_module_spec
Returns a MultiRLModuleSpec (self under DEFAULT_MODULE_ID key).

build
Builds the RLModule from this spec.

from_dict
Returns a single agent RLModule spec from a serialized representation.

to_dict
Returns a serialized representation of the spec.

update
Updates this spec with the given other spec.



Attributes


action_space


catalog_class


inference_only


learner_only


load_state_path


model_config


model_config_dict


module_class


observation_space






